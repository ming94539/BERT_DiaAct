WEBVTT

1
00:00:00.539 --> 00:00:17.070
Kunal Ahuja: You remember I told you the first old block is API is right that is used very limited services now right there are fees. I wanted. There are none but there are a few services, then majorly VM CS move to the new file based. That was the format. I, I, who I extended the last time. Right.

2
00:00:17.130 --> 00:00:21.180
Kunal Ahuja: Yes, and all the validation that extend you along with it goes to SAP right

3
00:00:21.510 --> 00:00:30.300
Kunal Ahuja: Now there are a few services which come through comes to idea to CSP so DMC for us. It just doesn't come through CSP.

4
00:00:31.380 --> 00:00:40.950
Kunal Ahuja: Ok ok it interacts with it only for us it is ok but there are few services. Let's say you have your VR Li log insight cost inside and right

5
00:00:41.940 --> 00:00:52.680
Kunal Ahuja: The way they come, is they are for for for them the services CSP in for CSP is the services ID. So basically they invoke CSP CSP guess of the file.

6
00:00:53.280 --> 00:01:05.370
Kunal Ahuja: We process it we inform CSP the list process and then CSP is responsible for sending to the customer orders obviously right there is no direct interaction between our service and

7
00:01:06.780 --> 00:01:07.590
Kunal Ahuja: Service and

8
00:01:07.620 --> 00:01:08.430
Pallavi Vanaja: ID, I think.

9
00:01:08.490 --> 00:01:14.670
Kunal Ahuja: Early and theoretically but when issues come, they can involve involvement, all the people that who they are pending.

10
00:01:15.270 --> 00:01:31.710
Kunal Ahuja: So now what change. It is. I'll tell you when CSP game, right. First thing that changed was it's been told that they have their own different JSON payload format right like EMC had the whole huge bunch of fields like that with CSP also add their own okay

11
00:01:43.980 --> 00:01:44.400
Kunal Ahuja: Just have

12
00:01:45.870 --> 00:01:46.620
Kunal Ahuja: To be done.

13
00:01:53.190 --> 00:01:56.490
Kunal Ahuja: You can go to this page also what I level and then this validation

14
00:01:59.670 --> 00:02:01.710
Pallavi Vanaja: Yes, I think you already shared that one.

15
00:02:13.710 --> 00:02:16.350
Kunal Ahuja: Don't go with this one. This one is a nod to complete

16
00:02:18.900 --> 00:02:19.890
Kunal Ahuja: The CSP on

17
00:02:25.350 --> 00:02:30.360
Kunal Ahuja: This is the same page where the duplicate calculation I do will do. Right, so feel those limitations.

18
00:02:30.990 --> 00:02:31.350
Okay.

19
00:02:53.610 --> 00:03:02.130
Kunal Ahuja: Okay, so when when CSP came to us. They told me that they're going to come with their own JSON payload format that is when I talk about JSON payload.

20
00:03:02.430 --> 00:03:12.180
Kunal Ahuja: The, the content of the file right that JSON that you had enough. I will be a little different from what we MC is sending but the fields inside that will be almost similar

21
00:03:12.600 --> 00:03:13.050
Pallavi Vanaja: Right. OK.

22
00:03:13.470 --> 00:03:32.400
Kunal Ahuja: So now this is the payload that CSP is giving us right so now let's try to derive who what and when from these right so basically you're who will be subscription ID. Right. Your water will be attributes here data center and ID that is under charge right

23
00:03:33.030 --> 00:03:48.060
Kunal Ahuja: You are WHEN WILL BE FOR JUST USE IT start time, you have the user to record the masses. Right. So these are your who wouldn't so it does the parsing logic is change the restaurant still remains the same. So service submits a file to CSP CSP gets done file to us.

24
00:03:48.690 --> 00:03:57.390
Kunal Ahuja: Okay, right now. One thing to note in this format is if you take this subscription ID VM see us to already give the it said that is starting with them.

25
00:03:58.320 --> 00:04:03.030
Kunal Ahuja: Just what CSP dollars with this format. I'm not going to give you that it food.

26
00:04:04.200 --> 00:04:04.470
Pallavi Vanaja: Okay.

27
00:04:04.560 --> 00:04:09.780
Kunal Ahuja: Who did it on your own. So when the file comes, what we do is

28
00:04:12.480 --> 00:04:16.080
Kunal Ahuja: Before, and only we have that mapping of CSP do it right, said

29
00:04:16.500 --> 00:04:16.830
Pallavi Vanaja: Yes.

30
00:04:16.950 --> 00:04:21.270
Kunal Ahuja: We make sure that corresponding CSP and I dissenters updated in our database table.

31
00:04:22.170 --> 00:04:37.890
Kunal Ahuja: Wherein we maintain these tables, right. So for us in Malaysia. We cash. Some subscription data. We also cash. Some offer data right in that subscription data we have. What is the same, whether that's it is active. What, what is the billing engine that's it belongs to

32
00:04:38.910 --> 00:04:44.760
Kunal Ahuja: What is the corresponding CSP subscription. It does it say and what is the subscription starting right

33
00:04:44.820 --> 00:04:53.220
Kunal Ahuja: Okay. Oh you do validation for that subscription. Last Name Explain right so we load it in memory. And then we do all the validation yeah okay so

34
00:04:53.250 --> 00:04:56.280
Pallavi Vanaja: Then I'll be loading this subscription data from

35
00:04:57.090 --> 00:04:59.730
Kunal Ahuja: We get from SMB border to solo

36
00:05:01.080 --> 00:05:13.380
Kunal Ahuja: Few jobs. First is the have few jobs, one time jobs to get all the SDP fits then incrementally we listened to SMB Q, if there are any status changes or nuisance. We it automatically comes to our database table.

37
00:05:14.040 --> 00:05:23.190
Kunal Ahuja: Okay, same. There's an awful job. We hit offered API every day because all of us are not created very frequently every day our database table gets updated.

38
00:05:24.570 --> 00:05:24.840
Pallavi Vanaja: OK.

39
00:05:24.990 --> 00:05:29.520
Kunal Ahuja: And then, then, then the the workflow as late as yet it loads in in memory, and it does all

40
00:05:29.640 --> 00:05:32.100
Pallavi Vanaja: Does all the revelations allegations. Okay.

41
00:05:32.370 --> 00:05:38.550
Kunal Ahuja: In this case, the flow is user record comes in with CSP subscription ideas. You can see the highlighted one

42
00:05:39.030 --> 00:05:39.720
Kunal Ahuja: I'll check in my

43
00:05:40.860 --> 00:05:54.510
Kunal Ahuja: Basically checking the database table if corresponding it said is there, if not on the fly from that piece of code. Look, I'll make a life cool to CSP to give me the corresponding it said for this because CSP is owner for this life.

44
00:05:55.050 --> 00:05:55.320
Yeah.

45
00:05:56.400 --> 00:06:07.860
Kunal Ahuja: I will get it said, I'll make sure it's updated in my database and then the regulations will go to guide. If it goes back office just understands it said that call is on the fly. If there is a cache miss, basically.

46
00:06:08.640 --> 00:06:08.970
Kunal Ahuja: Okay.

47
00:06:09.360 --> 00:06:12.150
Pallavi Vanaja: Okay, okay. So okay, so this is the

48
00:06:12.300 --> 00:06:23.400
Pallavi Vanaja: Okay, got it. Okay, so both CSP and the job or the service that is actually checking this both will actually essentially get the data from the SMB

49
00:06:23.880 --> 00:06:31.590
Pallavi Vanaja: Or a single database, but just that this particular service looks at the cash and if it doesn't have it in the cash, then it fetches it from CSP.

50
00:06:32.040 --> 00:06:38.760
Kunal Ahuja: Yes, so even SMB, in some cases, might not have this CSP subscription ID and which cases are those. I'll tell you.

51
00:06:39.300 --> 00:06:41.760
Kunal Ahuja: Again when Midas come game right

52
00:06:41.970 --> 00:06:49.110
Kunal Ahuja: When Midas code was put in, then we decided, Dennis and we decided, basically, that they will also store CSP subscription ID.

53
00:06:49.830 --> 00:06:54.210
Kunal Ahuja: So generally, when a new user is created. We didn't really get this to. We don't have to call

54
00:06:55.440 --> 00:07:00.060
Kunal Ahuja: All the mind migrated sets which are coming from SDP even SMB does not have this data.

55
00:07:01.050 --> 00:07:14.010
Kunal Ahuja: So now what happens if the user record comes in for that sense. So, for sure, we will not have the mapping. So that's why we call the API on the fly, and we have dead dad said, if it's a snot drill into number in on the data, the students

56
00:07:14.280 --> 00:07:17.670
Pallavi Vanaja: Okay, so you said a play that's the CSP that is slide.

57
00:07:18.060 --> 00:07:20.550
Pallavi Vanaja: Okay. And where does CSP fetch the

58
00:07:23.070 --> 00:07:26.610
Pallavi Vanaja: It doesn't fetch from Ed w or some particular

59
00:07:26.790 --> 00:07:36.810
Kunal Ahuja: Testing CSP is the owner of this construct basically the USD subscription ID CSP field. It's nowhere. No other services to do anything with it.

60
00:07:37.350 --> 00:07:42.120
Kunal Ahuja: Okay, I mean both of us. It is mentoring other kind of said and CSP maintenance other kind of Sir

61
00:07:42.450 --> 00:07:46.920
Pallavi Vanaja: Yes, yes I I remember you telling you you IDs ESP specific so

62
00:07:47.220 --> 00:07:48.900
Kunal Ahuja: That is when you you add a sense right

63
00:07:49.230 --> 00:07:53.250
Pallavi Vanaja: So wouldn't CSP have its own data store or something where

64
00:07:54.450 --> 00:07:56.460
Kunal Ahuja: They go out there and we query.

65
00:07:56.550 --> 00:08:02.880
Kunal Ahuja: And they have exposed and API to query is basically the query that API. And it gives a corresponding it said

66
00:08:03.810 --> 00:08:05.790
Pallavi Vanaja: Okay. Okay, got it. Okay. Okay.

67
00:08:06.060 --> 00:08:10.440
Kunal Ahuja: With me, we are querying CSP on the fly. If we don't have this information already

68
00:08:10.710 --> 00:08:11.520
Pallavi Vanaja: Okay, okay.

69
00:08:12.570 --> 00:08:20.070
Kunal Ahuja: And once we have it we store it in our data table. So, any, any subsequent record with the same opportunity. We won't call the API again because this team, we have

70
00:08:21.000 --> 00:08:22.830
Pallavi Vanaja: Okay, make sense. Yeah, yeah.

71
00:08:23.340 --> 00:08:30.540
Kunal Ahuja: So that gadget I was talking about is nothing but I agree in America that is based on our database tables into us usage mediation meetings.

72
00:08:31.020 --> 00:08:32.880
Kunal Ahuja: How those data tables are processed.

73
00:08:33.330 --> 00:08:39.600
Kunal Ahuja: We have a few of scheduled jobs which we have from SMB and from offering that we keep on updating

74
00:08:40.380 --> 00:08:42.600
Pallavi Vanaja: Gotcha. Okay. Okay. Yeah.

75
00:08:43.170 --> 00:08:48.480
Kunal Ahuja: Now, though the major problem is solved. We have, we know that it said we know who what and when

76
00:08:48.840 --> 00:08:51.900
Kunal Ahuja: The same set of validation will go through for each and every record.

77
00:08:53.010 --> 00:08:53.280
Pallavi Vanaja: Okay.

78
00:08:54.150 --> 00:08:55.770
Kunal Ahuja: No change, no change at all.

79
00:08:56.850 --> 00:09:06.150
Kunal Ahuja: Only changes coming in interaction with we Mc, Mc SP first changes this which are told to the sub search and it will be CSP zero ID. The second changes.

80
00:09:07.320 --> 00:09:12.330
Kunal Ahuja: When we interact with VM see me directly interact with VM CS SQL, you remember we send notification to their

81
00:09:12.810 --> 00:09:13.260
Pallavi Vanaja: Yes.

82
00:09:13.350 --> 00:09:27.420
Kunal Ahuja: Yes. And there. So you can see anything. Basically what CSP saying is, whenever you want to inform me or do you want to get data from me. They have CSP has build their own framework. I don't know if you're a well known as post office or CSP is notification service.

83
00:09:29.010 --> 00:09:30.210
Pallavi Vanaja: Not yeah okay

84
00:09:30.840 --> 00:09:33.990
Kunal Ahuja: So I believe what it does. You know how Rabbit MQ or any of the messaging us

85
00:09:33.990 --> 00:09:35.370
Pallavi Vanaja: Yeah yeah so

86
00:09:35.550 --> 00:09:43.320
Kunal Ahuja: What they have is they have built a rapper or Amazon is covers like basically you do a run book step of configuring

87
00:09:44.460 --> 00:09:49.860
Kunal Ahuja: Configuring those that is basically they are providing some set of API's in which what you will do is

88
00:09:50.280 --> 00:09:56.250
Kunal Ahuja: You will tell them that I want to create this message type okay message Dave is nothing but a unique, you can

89
00:09:56.640 --> 00:10:11.130
Kunal Ahuja: Compare it to a queue. Right. You want someone to subscribe to that you so that he can get your messages right he or she can get it. So they have kind of created a field, known as message right so if you are a publisher, you will ask them to create a message type. Okay.

90
00:10:11.400 --> 00:10:13.920
Kunal Ahuja: Then you will ask subscriber to subscribe to that message.

91
00:10:14.970 --> 00:10:17.850
Kunal Ahuja: In between what's it is post office who does this job.

92
00:10:19.260 --> 00:10:20.400
Kunal Ahuja: Number I publish

93
00:10:20.700 --> 00:10:26.610
Kunal Ahuja: That message to that any message to that message type whoever a subscriber is on the other end will get that

94
00:10:26.610 --> 00:10:27.480
Pallavi Vanaja: Message. Okay.

95
00:10:27.630 --> 00:10:35.100
Kunal Ahuja: The only thing is, how do you publish it. You don't publish it to you, you hit an API call internally, they maintain their cues and the same way.

96
00:10:35.490 --> 00:10:48.150
Kunal Ahuja: The subscriber has registered that whenever there's a message type or whenever there's a message for this particular message type which the subscriber subscriber, they do a one time activity of telling them, which API to call on this of service layer.

97
00:10:48.720 --> 00:10:52.980
Kunal Ahuja: Basically a CSP or the post office will inform them is through an API.

98
00:10:54.300 --> 00:10:54.540
Pallavi Vanaja: Yeah.

99
00:10:55.020 --> 00:10:56.250
Kunal Ahuja: It's kind of a book.

100
00:10:56.730 --> 00:11:00.900
Pallavi Vanaja: Yeah, and sort of listeners on Bolton, there's like direct calcium

101
00:11:01.110 --> 00:11:05.340
Kunal Ahuja: Their API is on board and in between post office, you're using his notes. Yeah.

102
00:11:05.580 --> 00:11:06.090
Pallavi Vanaja: Okay, okay.

103
00:11:06.300 --> 00:11:20.640
Kunal Ahuja: So that's the only way we interact. There's no other change. So I guess post office. You might know that should be okay for you. It's just think of it as a you know interface between CSP an ID or any other service that CSP is to post office. Yes.

104
00:11:20.820 --> 00:11:21.720
Pallavi Vanaja: Okay, okay.

105
00:11:22.170 --> 00:11:26.760
Kunal Ahuja: So that's. Those are the only two major differences between CSP is no an EMC slow

106
00:11:28.110 --> 00:11:41.370
Kunal Ahuja: When a new service on boards, the management direction is ask them to onboard through CSP, but we are well open, they can follow any moment we support both BMS even CSP because there are few services which comes through which our onboarding and DMC old format. Also, right.

107
00:11:42.630 --> 00:11:49.110
Kunal Ahuja: So, doesn't matter for us, you give any of these two pillows will be able to provide you the processing the usage mediation.

108
00:11:50.550 --> 00:11:51.570
Pallavi Vanaja: Okay, okay.

109
00:11:51.630 --> 00:11:57.150
Kunal Ahuja: All right, now these are the only two methods supported. I mean payloads and I don't think in near future, any third one is going to come

110
00:11:58.470 --> 00:11:58.770
Pallavi Vanaja: Okay.

111
00:11:59.010 --> 00:12:08.370
Kunal Ahuja: Okay, so this is how, if you see this is CSP is paid, basically. So this is how the payload look like right when I've completed the processing, you remember we had sq SP note.

112
00:12:08.460 --> 00:12:09.150
Pallavi Vanaja: When I since

113
00:12:09.630 --> 00:12:13.950
Kunal Ahuja: THE 70s money I have this post office payload in which I have used it, report it. That is a unique ID.

114
00:12:14.430 --> 00:12:25.290
Kunal Ahuja: Service definition ideas will is not relevant to us. Then you have the missing record counts. That means if the customer services provided a total count wrong and we find it to something and current to be live data.

115
00:12:25.830 --> 00:12:33.930
Kunal Ahuja: And then you have failed records the boat, it counts all of the same should have and what is the current interest rate. And if there are any errors, same format, just the fields are different.

116
00:12:34.530 --> 00:12:35.280
Pallavi Vanaja: Got it. Yeah.

117
00:12:35.700 --> 00:12:45.810
Kunal Ahuja: And if you look at this page right this is how you're nervous payload looks like. So inside this message field is the actual content. I want to relate to service.

118
00:12:47.400 --> 00:12:52.620
Kunal Ahuja: Above three fields or post of this specific. So this doesn't care. It's just a configuration so that we need to specify

119
00:12:53.250 --> 00:12:53.850
Pallavi Vanaja: Got it here.

120
00:12:54.090 --> 00:12:56.010
Kunal Ahuja: For it. So if you see this message type

121
00:12:56.040 --> 00:12:59.130
Kunal Ahuja: This is the one that Subscribe. Subscribe. Subscribe services.

122
00:13:01.560 --> 00:13:01.830
Pallavi Vanaja: Okay.

123
00:13:02.310 --> 00:13:07.080
Kunal Ahuja: Now I'll quickly give us a glimpse of your database table. So you have you can just picture Isaac right

124
00:13:07.800 --> 00:13:08.250
Forget

125
00:13:09.660 --> 00:13:09.870
Kunal Ahuja: For

126
00:13:12.060 --> 00:13:12.360
This

127
00:13:16.920 --> 00:13:17.220
Welcome

128
00:13:19.500 --> 00:13:21.870
Kunal Ahuja: So we use SAP HANA for us right

129
00:13:22.590 --> 00:13:38.490
Kunal Ahuja: You see this right we have basically four or five tables. One is your file Metallica, this is nothing but to store every information about the file. What has happened to that file. What is the status, where it's like if you see this tracker ID.

130
00:13:39.600 --> 00:13:43.200
Kunal Ahuja: This is nothing but a unique ID that CSP or EMC gets

131
00:13:44.430 --> 00:13:45.510
Kunal Ahuja: The ID.

132
00:13:45.870 --> 00:13:46.260
I totally

133
00:13:47.970 --> 00:13:48.270
Kunal Ahuja: Fine.

134
00:13:49.200 --> 00:13:53.340
Kunal Ahuja: And this table is don't not separate for EMC CSV. This is for anything come into the UN.

135
00:13:53.820 --> 00:13:58.140
Pallavi Vanaja: Yep. Okay, so that the fields have been mapped to the associated fields.

136
00:13:58.320 --> 00:13:59.070
Kunal Ahuja: Right, good.

137
00:13:59.220 --> 00:14:04.350
Kunal Ahuja: Okay, file process where it is nothing but it unique generation. This is what services, giving me right

138
00:14:04.650 --> 00:14:05.730
Kunal Ahuja: But yes, it is.

139
00:14:06.660 --> 00:14:13.890
Kunal Ahuja: Okay, file, but is where the source file POTUS take some as well. Sell veterinary product family which product family that belongs to

140
00:14:15.060 --> 00:14:29.700
Kunal Ahuja: Status. Where are the status on your local file where I played violin local the local area file path and this is you're basically break down on the total recordable there. How many validation duplicate said of Stevie sap. Wait.

141
00:14:30.270 --> 00:14:36.870
Kunal Ahuja: There's a complete it though. So if you want to start when you're going to kind of dashboard to take this data and see what are happening right

142
00:14:37.470 --> 00:14:37.770
Okay.

143
00:14:39.480 --> 00:14:50.970
Kunal Ahuja: Now this attribute to is basically that means successfully a message was published to post office that's only going to get populated. If it's not that mean it's not going

144
00:14:51.990 --> 00:14:52.290
Pallavi Vanaja: OK.

145
00:14:52.920 --> 00:14:58.320
Kunal Ahuja: I guess the rest of the fields are, you know, pretty much self explanatory. Now, one thing is

146
00:14:59.400 --> 00:15:06.270
Kunal Ahuja: Yes. So, so this is what though there's what the final table is the next table is basically your offer. I'd only right

147
00:15:07.080 --> 00:15:15.780
Kunal Ahuja: So in this VM all the office respective programs and if for example you EMC AWS, you have often have this child. I did his region to see this is basically one

148
00:15:16.680 --> 00:15:26.400
Kunal Ahuja: So this is what we compare and we do offer the relations against, and how does this table gets updated for baby john we hit our API we get any new office and we loaded here.

149
00:15:27.270 --> 00:15:32.040
Kunal Ahuja: Okay. Okay, so that the time of usage validation don't have to hit a PM and Monday night.

150
00:15:32.190 --> 00:15:33.660
Kunal Ahuja: Just to avoid the

151
00:15:35.040 --> 00:15:41.580
Kunal Ahuja: Same way, we have said dash. Right. So if you see the set is there. What is the status.

152
00:15:42.930 --> 00:15:52.650
Kunal Ahuja: What is the product family. What does this start and end date on that said or did and it takes all the validation and also if you see

153
00:15:56.580 --> 00:16:01.890
Kunal Ahuja: So this attribute for is nothing but a CSP view you already. So this is a test system. So that's why you're seeing like this.

154
00:16:02.370 --> 00:16:02.610
Pallavi Vanaja: Okay.

155
00:16:03.240 --> 00:16:11.760
Kunal Ahuja: If you see this right. So this is what I will check when I get the CSP record. I'm going to check whether against us a tribute, for I have a line item in this table or not.

156
00:16:12.690 --> 00:16:19.020
Kunal Ahuja: Gotcha. Not I'm gonna call it a PM. Want to make sure this table is also updated so that I don't have to call up an extreme

157
00:16:19.110 --> 00:16:19.440
Again,

158
00:16:26.610 --> 00:16:27.240
Kunal Ahuja: Just a second.

159
00:16:32.880 --> 00:16:46.950
Kunal Ahuja: So now this is what has happened. So I told you about file table. I told about offer table at all about table duplicate check is basically in memory, some concept of that tune. When we kind of cash. The already present record IDs.

160
00:16:49.230 --> 00:16:55.680
Kunal Ahuja: And this one table is just for operation purpose. Basically, whenever you want to load new families with art, you shouldn't be worried about

161
00:16:56.730 --> 00:16:57.030
Pallavi Vanaja: Okay.

162
00:16:57.720 --> 00:17:06.450
Kunal Ahuja: This is also operation purpose which cash needs to be different. Okay. They don't tell you that we do forking of billing engine where to send the user to SDP or SAP that I cover that.

163
00:17:09.960 --> 00:17:10.140
Kunal Ahuja: Was

164
00:17:10.980 --> 00:17:12.330
Kunal Ahuja: Basically, what happened is

165
00:17:13.170 --> 00:17:15.000
Kunal Ahuja: What happens is now when

166
00:17:16.350 --> 00:17:28.260
Kunal Ahuja: When Midas click then write us a little story. Okay, we are we are ready to switch to file. This we have no problem. But the overall overall decision of switching them to SAP was not get finalized.

167
00:17:29.160 --> 00:17:29.430
Pallavi Vanaja: Okay.

168
00:17:30.060 --> 00:17:38.400
Kunal Ahuja: But that means their subscriptions and still stay in SGP, but they are ready to switch to file this or let's go one step back and just take the MCS example.

169
00:17:38.880 --> 00:17:50.700
Kunal Ahuja: Okay, the way we decided to go perform migration is not a big bang migration, right, because it can impact many customers. What we decided is at the time fee or will be migrated. Okay.

170
00:17:50.820 --> 00:17:54.360
Kunal Ahuja: We're sad right but few ox will still remain in STP.

171
00:17:56.580 --> 00:18:01.740
Kunal Ahuja: Current situation all of the DMC have been migrated. But that's how we started. So during that time.

172
00:18:02.640 --> 00:18:13.020
Kunal Ahuja: This brings us to the situation, wherein since now we MC is going to switch to file based right and that file can have records from a number of folks or all dogs.

173
00:18:13.530 --> 00:18:22.650
Kunal Ahuja: Now out of those fields might have been migrated to SAP fields still be there in SDB made by all know you can play two sets because then finally fit information.

174
00:18:23.340 --> 00:18:33.570
Kunal Ahuja: Yes. Now, when the user record comes in in the file and in the same file, you have a record from SDP and sap both. How do you determine where to send users.

175
00:18:35.820 --> 00:18:36.240
Pallavi Vanaja: Okay.

176
00:18:36.900 --> 00:18:37.230
Kunal Ahuja: Got it.

177
00:18:37.620 --> 00:18:38.010
Pallavi Vanaja: Yeah.

178
00:18:38.250 --> 00:18:50.790
Kunal Ahuja: So the baby data mind that is through this table. Okay, so when SAP when when I when I get this paper when I get the data from SMB, I also get viral that said active

179
00:18:52.350 --> 00:18:55.920
Kunal Ahuja: Even build a building in an SMP or is it active in building has DP.

180
00:18:57.870 --> 00:18:59.460
Pallavi Vanaja: OK. OK.

181
00:19:05.730 --> 00:19:06.960
Kunal Ahuja: OK, so

182
00:19:08.850 --> 00:19:09.390
Kunal Ahuja: Oh,

183
00:19:11.430 --> 00:19:19.530
Kunal Ahuja: Yeah, so it will either it will go to SDP or it will come to SAP. Right. So the way we do. Is this table that I showed you

184
00:19:21.180 --> 00:19:21.450
Kunal Ahuja: Like

185
00:19:22.710 --> 00:19:25.140
Kunal Ahuja: The smell have if you see billing engine, right.

186
00:19:25.740 --> 00:19:42.360
Kunal Ahuja: Mm hmm. How does SMB SMB know that the SMB know this attribute Mike ma whenever we migrate. We make sure the city is migrate status of Satan as DBS migrated. Right. And those updates to keep on getting so we know which billing and then we need Susan

187
00:19:43.290 --> 00:19:44.220
Pallavi Vanaja: OK. OK.

188
00:19:44.430 --> 00:19:56.220
Kunal Ahuja: At a time, it will always be inactive or migrated state if the site is active in both right, by any chance, there's some issue or there's some delay, then we will, by default, assume that it needs to go to SDP

189
00:19:58.080 --> 00:19:58.410
Pallavi Vanaja: Okay.

190
00:19:59.100 --> 00:20:07.260
Kunal Ahuja: What so what what you need to worry about this. There are some forking logic which enables us to send users to SGP and sap both

191
00:20:09.210 --> 00:20:09.750
Kunal Ahuja: On the fly.

192
00:20:11.370 --> 00:20:17.340
Kunal Ahuja: So now to SAP Reagan directly in this through whatever normal who is dB. What we do is, you remember good API flow.

193
00:20:19.500 --> 00:20:21.630
Kunal Ahuja: The order flow. The first diagram that I showed you

194
00:20:21.690 --> 00:20:22.650
Pallavi Vanaja: Yes. Yes. Yeah.

195
00:20:22.860 --> 00:20:30.750
Kunal Ahuja: What we do is we consumed. We put a message in the same view and then the same process goes, it goes into Mongo then Informatica jobs kicks in and Simon's toy.

196
00:20:30.810 --> 00:20:32.220
Pallavi Vanaja: Yes, the same

197
00:20:32.400 --> 00:20:34.140
Pallavi Vanaja: Happens. Okay. Okay.

198
00:20:34.320 --> 00:20:35.910
Kunal Ahuja: You know, they use it should be saying do

199
00:20:38.430 --> 00:20:52.650
Kunal Ahuja: Okay, now, or two. So now everything is done right CSV files are able to consume the MC wells are able to consume all the validation. We have done right now. Other. Now it's time to submit data to SAP right

200
00:20:52.860 --> 00:20:55.200
Kunal Ahuja: So the more you will have SAP we interact to

201
00:20:56.040 --> 00:21:01.650
Kunal Ahuja: Is known as a BCC basically convergent charging what is responsible to perform rating or

202
00:21:01.950 --> 00:21:03.300
Kunal Ahuja: Lead that building amount that I

203
00:21:03.600 --> 00:21:05.340
Pallavi Vanaja: Told you. Right. Yes.

204
00:21:05.400 --> 00:21:14.820
Kunal Ahuja: So we interact with this CC, the way we interact is the tool that we're using this digital route has a native connector to CC, so we don't have to write any specific code to connect to CC

205
00:21:15.720 --> 00:21:17.100
Kunal Ahuja: Okay then.

206
00:21:17.250 --> 00:21:30.900
Kunal Ahuja: We put a hostname and number and credentials. That said, the only thing that we need to do is whatever the sap fields is we need to map our data to those corresponding fields, right, for example, who what and when. What does it say be will map that and some directors to so

207
00:21:31.740 --> 00:21:32.100
Pallavi Vanaja: Okay.

208
00:21:32.670 --> 00:21:34.290
Kunal Ahuja: Now wanted goes to SAP

209
00:21:41.490 --> 00:21:47.610
Kunal Ahuja: Hey, let me cover this next meeting. Actually, I have another one in next year. So I might not be able to cover this for

210
00:21:47.790 --> 00:21:50.280
Pallavi Vanaja: Sure. No, no, no worries. At all. Yeah, definitely.

211
00:21:50.580 --> 00:21:52.470
Kunal Ahuja: So Schedule one for Tuesday.

212
00:21:54.000 --> 00:21:54.330
Kunal Ahuja: And then

213
00:21:56.010 --> 00:21:58.200
Pallavi Vanaja: Show. Yeah. Yeah. No worries. Yeah. Thank you.

214
00:22:00.600 --> 00:22:00.870
Pallavi Vanaja: Bye.

